'use strict';

var assertType = require('../../helpers/assertType');
var fl = require('fantasy-land');

var _require = require('./core');

var tagSymbol = _require.tagSymbol;
var typeSymbol = _require.typeSymbol;


var isSetoid = function isSetoid(value) {
  return value != null && typeof value[fl.equals] === 'function';
};

var sameType = function sameType(a, b) {
  return a[typeSymbol] === b[typeSymbol] && a[tagSymbol] === b[tagSymbol];
};

var createDerivation = function createDerivation(valuesEqual) {
  var equals = function equals(a, b) {
    return isSetoid(a) && isSetoid(b) ? a.equals(b) : /*otherwise */valuesEqual(a, b);
  };
  var compositesEqual = function compositesEqual(a, b, keys) {
    for (var i = 0, len = keys.length; i < len; i++) {
      var keyA = a[keys[i]];
      var keyB = b[keys[i]];
      if (!equals(keyA, keyB)) {
        return false;
      }
    }
    return true;
  };
  var derivation = function derivation(variant, adt) {
    variant.prototype[fl.equals] = function (value) {
      assertType(adt)(this[tagSymbol] + '#equals', value);
      return sameType(this, value) && compositesEqual(this, value, Object.keys(this));
    };
    return variant;
  };
  derivation.withEquality = createDerivation;
  return derivation;
};

module.exports = createDerivation(function (a, b) {
  return a === b;
});